// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

enum Role {
  SEEKER // looking for support
  SPONSOR // providing support
  ADMIN // optional
}

model User {
  id              Int               @id @default(autoincrement())
  email           String            @unique
  passwordHash    String
  role            Role
  createdAt       DateTime          @default(now())
  HotelRequest    HotelRequest[]
  Contribution    Contribution[]
  HomeListing     HomeListing[]
  HomeApplication HomeApplication[]
}

enum RequestStatus {
  PENDING
  OPEN
  MATCHED
  FULFILLED
  CANCELLED
}

model HotelRequest {
  id       Int  @id @default(autoincrement())
  seekerId Int
  seeker   User @relation(fields: [seekerId], references: [id])

  startDate     DateTime
  endDate       DateTime
  guests        Int
  rooms         Int?
  city          String
  state         String?
  cityCode      String? // IATA (e.g., DEL, PHX), optional
  maxNightlyUSD Int?
  notes         String?

  goalCents Int?

  // Link to chosen Amadeus hotel/offer
  amadeusHotelId String?
  amadeusOfferId String?

  status    RequestStatus @default(PENDING)
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt

  contributions Contribution[]
}

model Contribution {
  id        Int          @id @default(autoincrement())
  requestId Int
  request   HotelRequest @relation(fields: [requestId], references: [id])

  sponsorId Int
  sponsor   User @relation(fields: [sponsorId], references: [id])

  amountCents Int // store money as integer cents
  createdAt   DateTime @default(now())
}

model HomeListing {
  id        Int  @id @default(autoincrement())
  sponsorId Int
  sponsor   User @relation(fields: [sponsorId], references: [id])

  title         String
  description   String?
  city          String // minimal location; adjust as needed
  state         String? // optional
  maxGuests     Int
  nightlyCents  Int? // null or 0 means free
  availableFrom DateTime?
  availableTo   DateTime?

  status    String   @default("OPEN") // "OPEN" | "CLOSED"
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  applications HomeApplication[]
}

model HomeApplication {
  id        Int         @id @default(autoincrement())
  listingId Int
  listing   HomeListing @relation(fields: [listingId], references: [id])

  seekerId Int
  seeker   User @relation(fields: [seekerId], references: [id])

  occupants Int
  startDate DateTime
  endDate   DateTime
  message   String?

  status    String   @default("PENDING") // "PENDING" | "APPROVED" | "DECLINED"
  createdAt DateTime @default(now())
}
